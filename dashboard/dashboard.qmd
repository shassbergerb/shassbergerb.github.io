---
title: "Dashboard"
format: 
  dashboard:
    nav-buttons: [github]
    github: https://github.com/mine-cetinkaya-rundel/ld-dashboard
logo: images/logo.png
theme: [sandstone, theme/custom.scss]
fig-width: 10
fig-asp: 0.3
params:
  month: "October"
  year: "2023"
  # 2021 rates: https://www.cdc.gov/nchs/data/nvsr/nvsr72/nvsr72-01.pdf
  us_cesarean_rate: 0.321 
  us_preterm_rate:  0.1049
  threshold_diff: 0.02
editor_options: 
  chunk_output_type: console
---

```{r packages, message= F, warnings = F}
library(Epi) # twoby2
library(janitor)
library(knitr)
library(mosaic) # fav stats
library(broom) # tidy function
library(magrittr) #pipes
library(haven) # reads XPT files
library(patchwork)
library(Hmisc) # describe()
library(rstanarm)

library(tidyverse)

library(readxl)
library(scales)
library(DT)
library(gt)
```

```{r data_ingest}
body_meas = read_rds("body_raw.rds")

food_sec = read_rds("food_sec_raw.rds")

demog = read_rds("demo_raw.rds")

alc_use = read_rds("alc_use.rds")
```

```{r cleaning_data}
new = left_join(demog, body_meas, by = "seqn")

new2 = left_join(new, food_sec, by = "seqn")

new3 = left_join(new2, alc_use, by = "seqn")

reduced = new3 %>% filter(ridstatr == 2, ridageyr < 80, ridageyr > 20)

raw = reduced %>% select(seqn, fsq165, bmxht, bmxbmi, fsdhh, alq151, ridreth3)

raw$fsq165 = as.factor(raw$fsq165) %>% fct_recode("Received" = "1","Never" = "2", "NA" = "9", "NA" = "7")

raw$fsdhh = as.factor(raw$fsdhh) %>% fct_recode("none" = "1","low" = "2","medium" = "3","high" = "4")

raw$alq151 = as.factor(raw$alq151) %>% fct_recode("Yes" = "1","No" = "2", "NA" = "9", "NA" = "7")

raw$ridreth3 = as.factor(raw$ridreth3) %>% fct_recode("Mexican" = "1",
                                             "Hispanic" = "2",
                                             "White" = "3",
                                             "Black" = "4",
                                             "Asian" = "6",
                                             "Multi-Race/Other" = "7")

raw = raw %>% filter(fsq165 != "NA", alq151 != "NA", complete.cases(fsq165, bmxht, bmxbmi, fsdhh, alq151, ridreth3)) %>% droplevels() %>% tibble()
```


```{r load_data, message= F}
ld <- read_excel("data\\ld.xlsx")
```

```{r set_input}
time_period <- paste(params$month, params$year)
```

```{r data_prep}
ld <- ld |>
  mutate(
    delivery_method = str_to_sentence(delivery_method),
    term = str_to_sentence(term),
    parity = case_when(
      parity == "1"  ~ "Nulliparous",
      parity == "2"  ~ "Primiparous",
      parity == "3+" ~ "Multiparous"
    ),
    parity = fct_relevel(parity, "Nulliparous", "Primiparous", "Multiparous"),
    maternal_age = fct_relevel(maternal_age, "<20", "20-34", "35+")
  )
```

#  {.sidebar}

This dashboard displays statistics for:

|              |                     |
|--------------|---------------------|
| **Hospital** | Grey Sloan Memorial |
| **Unit**     | Labor and Delivery  |
| **Month**    | `{r} time_period`   |

------------------------------------------------------------------------

In `{r} time_period` the staff breakdown in the unit was as follows:

|                          |     |
|--------------------------|-----|
| **Attending physicians** |  14 |
| **Residents**            |  21 |
| **Nurses**               |  12 |

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Disclaimer

This is a fictional hospital. The data are simulated based on realistic birth characteristics and risk factors from [this report by the CDC](https://www.cdc.gov/nchs/data/nvsr/nvsr72/nvsr72-01.pdf).
:::

# All

```{r}
#| label: all-values
#| results: hide

n_participants <- nrow(raw)

p_fsdhh = raw %>%
  count(fsdhh) %>%
  mutate(p = n/sum(n)) %>%
  filter(fsdhh != "none") %>%
  mutate(t = sum(p)) %>%
  distinct(t) %>%
  pull(t)


p_preterm <- ld |>
  count(term) |>
  mutate(p = n / sum(n)) |>
  filter(term == "Pre-term") |>
  pull(p)

p_preterm_color <- case_when(
  between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ "warning",
  p_preterm > params$us_preterm_rate + params$threshold_diff ~ "danger",
  .default = "light"
  )
```

## Row {height="20%"}

```{r}
#| content: valuebox
#| title: "Participants"

list(
  icon = "file-medical",
  color = "primary",
  value = n_participants
)
```

```{r}
#| content: valuebox
#| title: "Americans with Food Insecurity"

list(
  icon = "clipboard2-pulse",
  value = label_percent(accuracy = 0.1)(p_fsdhh)
)
```

```{r}
#| content: valuebox
#| title: "Pre-term births"

list(
  icon = "calendar-week",
  color = p_preterm_color,
  value = label_percent(accuracy = 0.1)(p_preterm)
)
```

## Row {height="40%"}

### Column {width="40%"}

```{r}
#| title: Food Insecurity




ld |>
  count(delivery_method) |>
  mutate(p = n / sum(n)) |>
  gt() |>
  fmt_percent(
    columns = p,
    decimals = 1
  ) |>
  tab_style(
    style = cell_text(color = "#ae8b2d", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = delivery_method == "Cesarean"
    )
  ) |>
  tab_style(
    style = cell_text(color = "#0e2635", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = delivery_method == "Vaginal"
    )
  ) |>
  cols_label(
    delivery_method = "",
    n = "Number of<br>deliveries",
    p = "Proportion of<br>deliveries",
    .fn = md
  )
```

### Column {width="60%"}

```{r}
#| title: Food Insecurity

raw %>%
  count(fsdhh) %>%
  mutate(p = n/sum(n)) %>%
  ggplot(aes(x = fsdhh, y = p, group = 1))+
    geom_line() + 
    geom_point()+
  labs(x = "")+
  scale_y_continuous("Proportion", labels = label_percent())
```

## Row {height="40%"}

```{r}
#| title: Delivery method and parity

ld |>
  count(parity, delivery_method) |>
  ggplot(aes(x = n, y = fct_rev(parity), fill = delivery_method)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = NULL, x = NULL, fill = "Delivery\nmethod")
```

```{r}
#| title: Delivery method and maternal age

ld |>
  count(maternal_age, delivery_method) |>
  ggplot(aes(x = n, y = fct_rev(maternal_age), fill = delivery_method)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = NULL, x = NULL, fill = "Delivery\nmethod")
```

# Vaginal {orientation="columns"}

## Column {width="60%"}

```{r}
#| label: vaginal-values
#| results: hide

#ld_v <- ld |>
  #filter(delivery_method == "Vaginal")

#n_births_v <- nrow(ld_v)

#p_preterm_v <- ld_v |>
 # count(term) |>
  #mutate(p = n / sum(n)) |>
 # filter(term == "Pre-term") |>
 #pull(p)

#p_preterm_color_v <- case_when(
 # between(p_preterm_v, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ "warning",
#  p_preterm_v > params$us_preterm_rate + params$threshold_diff ~ "danger",
  #.default = "light"
 # )
```

### Row {height="20%"}

```{r}
#| component: valuebox
#| title: "Total births"

#list(
 # icon = "file-medical",
  #color = "primary",
  #value = n_births_v
#)
```

```{r}
#| component: valuebox
#| title: "Pre-term births"

#list(
 # icon = "calendar-week",
#  color = p_preterm_color_v,
 # value = label_percent(accuracy = 0.1)(p_preterm_v))
```

### Row {height="40%"}

```{r}
#| title: Maternal age

#ld_v |>
#  count(maternal_age) |>
#  mutate(p = n / sum(n)) |>
#  ggplot(aes(x = maternal_age, y = n, group = 1)) +
#  geom_line(linewidth = 2, color = "#0e263560") +
##  geom_point(size = 3, color = "#0e2635") +
#  geom_point(size = 6, color = "#0e2635", shape = "circle open") +
#  labs(x = NULL) +
#  scale_y_continuous(
##    "Count",
  #  sec.axis = sec_axis(~ . / n_births, name = "Proportion", labels = label_percent())
#  )
```

### Row {height="40%" .tabset}

```{r}
#| title: Maternal age and parity

#ld_v |>
#  count(maternal_age, parity) |>
#  ggplot(aes(x = n, y = fct_rev(maternal_age), fill = fct_rev(parity))) +
#  geom_col(position = "fill", color = "white") +
#  scale_fill_brewer(
#    palette = "Blues",
##    guide = guide_legend(reverse = TRUE),
#    direction = -1
#  ) +
#  scale_x_continuous(labels = label_percent()) +
#  labs(y = NULL, x = NULL, fill = "Parity")
```

```{r}
#| title: Maternal age and term
#
#ld_v |>
#  count(maternal_age, term) |>
###  ggplot(aes(x = n, y = fct_rev(maternal_age), fill = fct_rev(term))) +
#  geom_col(position = "fill", color = "white") +
#  scale_fill_brewer(
#    palette = "Greens",
#    guide = guide_legend(reverse = TRUE),
##    direction = -1
#  ) +
#  scale_x_continuous(labels = label_percent()) +
#  labs(y = NULL, x = NULL, fill = "Term")
```

## Column {width="40%"}

```{r}
#| title: Data

#ld_v |>
#  select(-delivery_method) |>
#  arrange(patient_id) |>
#  datatable(
#    colnames = c("ID", "Maternal age", "Parity", "Term"),
#    options = list(
##      dom = "lrtip", 
##      paging = TRUE,
#      lengthMenu = c(5, 10, 25),
#      pageLength = 10, 
#      scrollY = TRUE ),)
```

# Caesarean {orientation="columns"}

## Column {width="60%"}

```{r}
#| label: cesarean-values
#| results: hide

#ld_c <- ld |>
#  filter(delivery_method == "Cesarean")

#n_births_c <- nrow(ld_c)

#p_preterm_c <- ld_c |>
#  count(term) |>
#  mutate(p = n / sum(n)) |>
 # filter(term == "Pre-term") |>
##  pull(p)

#p_preterm_color_c <- case_when(
#  between(p_preterm_c, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ "warning",
#  p_preterm_c > params$us_preterm_rate + params$threshold_diff ~ "danger",
#  .default = "light"
#  )
```

### Row {height="20%"}

```{r}
#| component: valuebox
#| title: "Total births"

#list(
 # icon = "file-medical",
#  color = "primary",
#  value = n_births_c
#)
```

```{r}
#| component: valuebox
#| title: "Pre-term births"

#list(
 # icon = "calendar-week",
 # color = p_preterm_color_c,
 # value = label_percent(accuracy = 0.1)(p_preterm_c)
#)
```

### Row {height="40%"}

```{r}
#| title: Maternal age

#ld_c |>
#  count(maternal_age) |>
 # mutate(p = n / sum(n)) |>
##  ggplot(aes(x = maternal_age, y = n, group = 1)) +
 # geom_line(linewidth = 2, color = "#0e263560") +
#  geom_point(size = 3, color = "#0e2635") +
#  geom_point(size = 6, color = "#0e2635", shape = "circle open") +
#  labs(x = NULL) +
#  scale_y_continuous(
 #   "Count",
 #   sec.axis = sec_axis(~ . / n_births, name = "Proportion", labels = label_percent())
#  )
```

### Row {height="40%" .tabset}

```{r}
#| title: Maternal age and parity

#ld_c |>
#  count(maternal_age, parity) |>
#  ggplot(aes(x = n, y = fct_rev(maternal_age), fill = fct_rev(parity))) +
#  geom_col(position = "fill", color = "white") +
#  scale_fill_brewer(
#    palette = "Blues",
##    guide = guide_legend(reverse = TRUE),
#    direction = -1
#  ) +
#  scale_x_continuous(labels = label_percent()) +
#  labs(y = NULL, x = NULL, fill = "Parity")
```

```{r}
#| title: Maternal age and term

#ld_c |>
#  count(maternal_age, term) |>
#  ggplot(aes(x = n, y = fct_rev(maternal_age), fill = fct_rev(term))) +
#  geom_col(position = "fill", color = "white") +
#  scale_fill_brewer(
#    palette = "Greens",
#    guide = guide_legend(reverse = TRUE),
#    direction = -1
#  ) +
##  scale_x_continuous(labels = label_percent()) +
#  labs(y = NULL, x = NULL, fill = "Term")
```

## Column {width="40%"}

```{r}
#| title: Data

#ld_c |>
#  select(-delivery_method) |>
#  arrange(patient_id) |>
#  datatable(
#    colnames = c("ID", "Maternal age", "Parity", "Term"),
 #   options = list(
 #     dom = "lrtip", 
#      paging = TRUE,
#      lengthMenu = c(5, 10, 25),
#      pageLength = 10, 
#      scrollY = TRUE
#    ),
# )
```

# Data

```{r}
raw %>%
  arrange(seqn) %>%
  select(seqn, fsdhh, fsq165, bmxbmi, bmxht, alq151) %>% 
  datatable(
    colnames = c("ID", "Household Food Insecurity","Household SNAP Usage",  "BMI", "Standing Height (cm)", "Excessive Daily Alcohol Consumption"),
    options = list(dom = 'ftp', paging = TRUE)
    )
```
